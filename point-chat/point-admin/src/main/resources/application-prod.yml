server:
  port: 9089
spring:
  application:
    name: dot-chat
  servlet:
    multipart:
      max-file-size: 300MB #设置单个文件大小
      max-request-size: 300MB #设置单次请求文件的总大小
  #  数据库配置
  datasource:
    druid:
      url: jdbc:mysql://${DB_HOST:127.0.0.1}:3306/${MYSQL_DB_NAME:dot_chat}?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=PRC
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: ${MYSQL_USERNAME:}
      password: ${MYSQL_PASSWORD:}
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 最小连接池数量
      min-idle: 5
      # 最大连接池数量
      max-active: 100
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-pool-prepared-statement-per-connection-size: 0
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: SELECT 1
      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录
      aop-patterns: 'com.dot.msg.*, com.dot.sys.*, com.dot.deepseek.*'
      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
      stat-view-servlet: #监控页配置
        # 启用StatViewServlet
        enabled: true
        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
        url-pattern: /druid/*
        # 配置监控页面访问密码
        login-username: abc
        login-password: abc
        # 不允许清空统计数据,重新计算
        reset-enable: false
        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
        #allow:
        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
        #deny:
      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
      web-stat-filter: # web监控
        enabled: true
        url-pattern: /*
        exclusions: '*.html,*.js,*.map,*.ts,*.css,*.mp3,*.gif,*.jpg,*.png,*.ico,*.svg,*.woff2,/druid/*'
        # 开启session统计功能
        session-stat-enable: true
        # session的最大个数,默认100
        session-stat-max-count: 1000
      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########
      filters: stat,wall,log4j2
      filter:
        stat: # sql监控统计
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 10000
          merge-sql: true
  # redis配置
  data:
    redis:
      password: ${REDIS_PASSWORD:}
      host: ${DB_HOST:127.0.0.1}
      port: 6379
      timeout: 30000 # 读取超时时间（毫秒）
      connect-timeout: 30000 #连接超时时间（毫秒）
      database: 0
      health-check: true # 是否开启健康检查(RedisHealthCheck.class)
      lettuce:
        pool:
          enabled: true
          max-active: 30 # 连接池最大连接数（使用负值表示没有限制）
          max-wait: 20000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 10 # 连接池中的最大空闲连接
          min-idle: 5 # 连接池中的最小空闲连接
          time-between-eviction-runs: -1 #逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
        cluster:
          refresh:
            adaptive: true
            period: 20 # 20秒自动刷新一次

logging:
  level:
    com.point: info
  config: classpath:logback-spring.xml
  file:
    path: ./logs


springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    show-extensions: true
  api-docs:
    path: /v3/api-docs
  default-flat-param-object: true
  group-configs:
    - group: 'default'
      display-name: '点聊'
      packages-to-scan:
        -com.point.chat.pointadmin.controller
knife4j:
  enable: true
  setting:
    language: zh-CN
    enable-swagger-models: true
    enable-document-manage: true
    swagger-model-name: 实体类列表
    enable-version: true
    enable-reload-cache-parameter: true
    enable-after-script: true
    # enable-filter-multipart-api-method-type: POST,GET,PUT,DELETE
    # enable-filter-multipart-apis: true
    enable-request-cache: true
    enable-host: false
    #enable-home-custom: true
    # home-custom-path: classpath:markdown/home.md
    enable-search: true
    enable-footer: true
    enable-footer-custom: true
    enable-dynamic-parameter: true
    enable-debug: true
    enable-open-api: true
    enable-group: true
  cors: false
  production: false
  basic:
    enable: true
    username: abc
    password: abc


swagger:
  home:
    title: '点聊'
    description: '主要功能：聊天、消息推送、消息通知'
    version: '1.0.0'

# tio配置
tio:
  server:
    port: 9326
    protocol-name: tio
    charset: UTF-8
    heartbeat-timeout: 60000
    #如果你希望通过wss来访问(不通过nginx转发),到配置中开启,不过首先你得有SSL证书（证书必须和域名相匹配，否则可能访问不了ssl）

aliyun:
  oss:
    local: false
    domain: #https://127.0.01 #阿里云OSS里配置的域名
    access-key: ${ALI_CLOUD_ACCESS_KEY_ID}  # 阿里云 AccessKey
    secret-key: ${ALI_CLOUD_ACCESS_KEY_SECRET}  # 阿里云 SecretKey
    bucket-name: #oss # Bucket名称
    region: #oss-cn-hangzhou.aliyuncs.com # 外网Endpoint

mat:
  upload:
    image:
      root-context: media
      root-path: /home/point-chat/data/${mat.upload.file.root-context}/
      type: image
      ext-str: jpg,jpeg,gif,png,bmp,tif,ico
      size: 10
      compress: false
    video:
      root-context: media
      root-path: /home/point-chat/data/${mat.upload.file.root-context}/
      type: video
      ext-str: mp4,mkv,avi,mov,wmv,3gp,rm,rmvb,flv,webm
      size: 50
      compress: false
    file:
      root-context: media
      root-path: /home/point-chat/data/${mat.upload.file.root-context}/
      type: file
      ext-str: zip,gzip,rar,tar,7z,gz,war,ios,doc,docx,xls,xlsx,ppt,pptx,pdf,xml,html,htm,txt,md,log,css,mp3,wma,wav,amr,mp4,mkv,avi,mov,wmv,3gp,rm,rmvb,flv,webm,pem,p12,jpg,jpeg,gif,png,bmp,tif,ico
      size: 50
      compress: false

# 聊天配置
chat:
  icon: static/ico/dot-logo.jpg
  group:
    max-member-num: 500
    qrcode-url: 